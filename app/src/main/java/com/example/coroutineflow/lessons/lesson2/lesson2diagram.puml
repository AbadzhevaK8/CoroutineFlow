@startuml
class MainActivity {
    - binding: ActivityMainBinding

    + onCreate(savedInstanceState: Bundle?)
}

class Lesson2 {
    + suspend main()
    + getFlowByFlowBuilder(): Flow<Int>
    + suspend isPrime(n: Int): Boolean
}

object UsersRepository {
    - users: MutableList<String>

    + suspend addUser(user: String)
    + suspend loadUsers(): Flow<List<String>>
}

class UsersViewModel {
    - repository: UsersRepository
    - _users: MutableLiveData<List<String>>
    + users: LiveData<List<String>>

    + addUser(user: String)
    - loadUsers()
}

class UsersActivity {
    - binding: ActivityUsersBinding
    - viewModel: UsersViewModel

    + onCreate(savedInstanceState: Bundle?)
    - setupListeners()
    - observeViewModel()

    + newIntent(context: Context): Intent
}

class Users2Activity {
    - binding: ActivityUsersBinding
    - viewModel: UsersViewModel

    + onCreate(savedInstanceState: Bundle?)
}

UsersViewModel ..> UsersRepository : uses
UsersActivity --> UsersViewModel : uses
UsersActivity --> Users2Activity : calls
Users2Activity --> UsersViewModel : uses
MainActivity --> UsersActivity : calls
@enduml